CREATE DATABASE DEALERSHIP;
USE DEALERSHIP; -- CAMBIAR NOMBRE A INGLES!!!

CREATE TABLE CAR_DEALERSHIP
(ID_CAR_DEALER INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
NAME_ VARCHAR (30), 
LOCATION VARCHAR (40));

CREATE TABLE WORKER
(USER_ VARCHAR (30) NOT NULL PRIMARY KEY,
PASSWORD_ VARCHAR (30),
ADMIN_ BOOLEAN,
ID_CAR_DEALER INT,
FOREIGN KEY (ID_CAR_DEALER) REFERENCES CAR_DEALERSHIP (ID_CAR_DEALER) ON UPDATE CASCADE ON DELETE CASCADE);

CREATE TABLE MODEL
(NAME_MODEL VARCHAR (30) NOT NULL,
MARK VARCHAR (30),
STOCK INT CHECK (STOCK>=0),
PRICE DOUBLE,
ID_CAR_DEALER INT NOT NULL,
FOREIGN KEY (ID_CAR_DEALER) REFERENCES CAR_DEALERSHIP (ID_CAR_DEALER) ON UPDATE CASCADE ON DELETE CASCADE,
PRIMARY KEY (NAME_MODEL, ID_CAR_DEALER));

CREATE TABLE CLIENT_
(USER_ VARCHAR (30) NOT NULL PRIMARY KEY, 
DNI CHAR (9),
EMAIL VARCHAR (40),  
PASSWORD_ VARCHAR (40));

CREATE TABLE PURCHASE
(ID_PURCHASE INT AUTO_INCREMENT PRIMARY KEY,
USER_ VARCHAR (30) NOT NULL,
NAME_MODEL VARCHAR (30) NOT NULL,
ID_CAR_DEALER INT NOT NULL,
DATE_PURCHASE DATE,
QUANTITY INT,
FOREIGN KEY (USER_) REFERENCES CLIENT_ (USER_) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (NAME_MODEL) REFERENCES MODEL (NAME_MODEL) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (ID_CAR_DEALER) REFERENCES MODEL (ID_CAR_DEALER) ON UPDATE CASCADE ON DELETE CASCADE);

INSERT INTO CAR_DEALERSHIP (NAME_, LOCATION) VALUES
('AutoMadrid', 'Madrid'),
('SuperCars', 'Barcelona'),
('Valencia Motors', 'Valencia');

INSERT INTO WORKER (USER_, PASSWORD_, ADMIN_, ID_CAR_DEALER) VALUES
('juan23', 'pass123', TRUE, 1),
('maria99', 'secure456', FALSE, 1),
('pedro78', 'mypass789', TRUE, 2),
('lauraX', 'key123', FALSE, 2),
('carlos21', 'password', TRUE, 3);

INSERT INTO MODEL (NAME_MODEL, MARK, STOCK, PRICE, ID_CAR_DEALER) VALUES
('Model S', 'Tesla', 5, 70000.00, 1),
('Model 3', 'Tesla', 8, 60000.00, 1),
('Civic', 'Honda', 10, 25000.00, 2),
('Accord', 'Honda', 6, 30000.00, 2),
('Mustang', 'Ford', 3, 55000.00, 3),
('Focus', 'Ford', 7, 22000.00, 3),
('Civic', 'Honda', 4, 26000.00, 3); 

INSERT INTO CLIENT_ (USER_, EMAIL, DNI, PASSWORD_) VALUES
('client1', 'cliente1@email.com', '12345678A', 'pass1'),
('client2', 'cliente2@email.com', '87654321B', 'pass2'),
('client3', 'cliente3@email.com', '11223344C', 'pass3');

INSERT INTO PURCHASE (USER_, NAME_MODEL,ID_CAR_DEALER, DATE_PURCHASE, QUANTITY) VALUES
('client1', 'Model S', 1, '2024-03-01', 1),
('client2', 'Civic', 2, '2024-03-05', 2),
('client3', 'Focus', 3, '2024-03-10', 1);

-- HAY QUE CAMBIAR PARA QUE NO SALGA MORE THAN ONE ROW AFFECTED
DELIMITER //
CREATE PROCEDURE REGISTER_PURCHASE (USER_2 VARCHAR (30), NAME_MODEL2 VARCHAR (30), ID_CAR_DEALER2 INT, DATE_PURCHASE2 DATE, QUANTITY2 INT)
BEGIN
	DECLARE STOCK_BEFORE INT;
    DECLARE QUANTITY_PURCHASE INT;
    
    SELECT STOCK INTO STOCK_BEFORE FROM MODEL WHERE NAME_MODEL = NAME_MODEL2 AND ID_CAR_DEALER = ID_CAR_DEALER2 ;
    SELECT COUNT(*) INTO QUANTITY_PURCHASE FROM PURCHASE;
  
		INSERT INTO PURCHASE (USER_, NAME_MODEL, ID_CAR_DEALER, DATE_PURCHASE, QUANTITY)
		VALUES 
		(USER_2, NAME_MODEL2, ID_CAR_DEALER2, DATE_PURCHASE2, QUANTITY2);
		IF(QUANTITY_PURCHASE=(SELECT COUNT(*) FROM PURCHASE)) THEN
			SELECT CONCAT('The purchase can not be done') AS MENSAJE;
		ELSE 
            UPDATE MODEL
			SET STOCK = STOCK -1 WHERE NAME_MODEL = NAME_MODEL2 AND ID_CAR_DEALER = ID_CAR_DEALER2;
			
			SELECT CONCAT('Purchase corretly done') AS MENSAJE;
		END IF;
  
END //

DELIMITER ;
DROP DATABASE DEALERSHIP;
drop procedure REGISTER_PURCHASE;
CALL REGISTER_PURCHASE ('client1', 'Civic', 2, '2025-03-20', 1);

-- SHOWS CARS WITH PRICE MORE THAN 50000â‚¬
DELIMITER //
CREATE PROCEDURE LUXURY_MODELS ()
BEGIN
	DECLARE NAME_M VARCHAR (30);
    DECLARE PRICE_M DOUBLE;
    DECLARE STOCK_M INT;
    DECLARE END_C BOOL DEFAULT 0;
    DECLARE C CURSOR FOR SELECT NAME_MODEL, PRICE, STOCK FROM MODEL WHERE PRICE>50000;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET END_C = 1;
    OPEN C;
    FETCH C INTO NAME_M, PRICE_M, STOCK_M;
    WHILE END_C = 0 DO
		SELECT CONCAT('MODEL NAME: ',  NAME_M, ' PRICE: ', PRICE_M, ' STOCK: ', STOCK_M) AS MENSAJE;
        FETCH C INTO NAME_M, PRICE_M, STOCK_M ;
	END WHILE;
END //
DELIMITER ;
DROP PROCEDURE LUXURY_MODELS;
CALL LUXURY_MODELS;

-- RETUNRS AVERAGE PRICE OF ALL CARS IN THE CARDEALERSHIP
DELIMITER //
CREATE FUNCTION AVERAGEPRICE(ID_CAR_DEALER2 INT) RETURNS DOUBLE
READS SQL DATA 
BEGIN
    DECLARE NOT_FOUND BOOL DEFAULT 0;
    DECLARE AVERAGE DOUBLE;
	DECLARE CONTINUE HANDLER FOR 1329 SET NOT_FOUND = 1;
   		
		SELECT AVG(PRICE) INTO AVERAGE FROM MODEL WHERE ID_CAR_DEALER = ID_CAR_DEALER2;
        
	IF NOT_FOUND THEN 
		SELECT CONCAT('That cardealer id is not in the database') AS MENSAJE;
	END IF;
	
    RETURN AVERAGE;

END //
DELIMITER ;

DELIMITER //

CREATE FUNCTION AVERAGEPRICE(ID_CAR_DEALER2 INT) RETURNS DOUBLE
READS SQL DATA
BEGIN
    DECLARE AVERAGE DOUBLE DEFAULT 0;
    DECLARE NOT_FOUND INT DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR 1329 SET NOT_FOUND = 1;

    SELECT AVG(PRICE) INTO AVERAGE 
    FROM MODEL 
    WHERE ID_CAR_DEALER = ID_CAR_DEALER2;


    IF NOT_FOUND = 1 THEN
        SET AVERAGE = NULL; 
    END IF;


    RETURN AVERAGE;
END //

DELIMITER ;




    
    
	
	





